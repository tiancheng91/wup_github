// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 3.2.1.1 by WSRD Tencent.
// Generated from `/usr/local/resin_system.mqq.com/webapps/communication/taf/upload/sukeyli/LoginQ.jce'
// **********************************************************************

package TRom;

public final class JoinIPInfo extends com.qq.taf.jce.JceStruct implements java.lang.Cloneable
{
    public String className()
    {
        return "TRom.JoinIPInfo";
    }

    public String fullClassName()
    {
        return "TRom.JoinIPInfo";
    }

    public int eIPType = 0;

    public java.util.ArrayList<String> vIPList = null;

    public int eApnType = 0;

    public int eNetType = 0;

    public int getEIPType()
    {
        return eIPType;
    }

    public void  setEIPType(int eIPType)
    {
        this.eIPType = eIPType;
    }

    public java.util.ArrayList<String> getVIPList()
    {
        return vIPList;
    }

    public void  setVIPList(java.util.ArrayList<String> vIPList)
    {
        this.vIPList = vIPList;
    }

    public int getEApnType()
    {
        return eApnType;
    }

    public void  setEApnType(int eApnType)
    {
        this.eApnType = eApnType;
    }

    public int getENetType()
    {
        return eNetType;
    }

    public void  setENetType(int eNetType)
    {
        this.eNetType = eNetType;
    }

    public JoinIPInfo()
    {
    }

    public JoinIPInfo(int eIPType, java.util.ArrayList<String> vIPList, int eApnType, int eNetType)
    {
        this.eIPType = eIPType;
        this.vIPList = vIPList;
        this.eApnType = eApnType;
        this.eNetType = eNetType;
    }

    public boolean equals(Object o)
    {
        if(o == null)
        {
            return false;
        }

        JoinIPInfo t = (JoinIPInfo) o;
        return (
            com.qq.taf.jce.JceUtil.equals(eIPType, t.eIPType) && 
            com.qq.taf.jce.JceUtil.equals(vIPList, t.vIPList) && 
            com.qq.taf.jce.JceUtil.equals(eApnType, t.eApnType) && 
            com.qq.taf.jce.JceUtil.equals(eNetType, t.eNetType) );
    }

    public int hashCode()
    {
        try
        {
            throw new Exception("Need define key first!");
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
        return 0;
    }
    public java.lang.Object clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void writeTo(com.qq.taf.jce.JceOutputStream _os)
    {
        _os.write(eIPType, 0);
        if (null != vIPList)
        {
            _os.write(vIPList, 1);
        }
        _os.write(eApnType, 2);
        _os.write(eNetType, 3);
    }

    static int cache_eIPType;
    static java.util.ArrayList<String> cache_vIPList;
    static int cache_eApnType;
    static int cache_eNetType;

    public void readFrom(com.qq.taf.jce.JceInputStream _is)
    {
        this.eIPType = (int) _is.read(eIPType, 0, false);
        if(null == cache_vIPList)
        {
            cache_vIPList = new java.util.ArrayList<String>();
            String __var_2 = "";
            ((java.util.ArrayList<String>)cache_vIPList).add(__var_2);
        }
        this.vIPList = (java.util.ArrayList<String>) _is.read(cache_vIPList, 1, false);
        this.eApnType = (int) _is.read(eApnType, 2, false);
        this.eNetType = (int) _is.read(eNetType, 3, false);
    }

    public void display(java.lang.StringBuilder _os, int _level)
    {
        com.qq.taf.jce.JceDisplayer _ds = new com.qq.taf.jce.JceDisplayer(_os, _level);
        _ds.display(eIPType, "eIPType");
        _ds.display(vIPList, "vIPList");
        _ds.display(eApnType, "eApnType");
        _ds.display(eNetType, "eNetType");
    }

    public void displaySimple(java.lang.StringBuilder _os, int _level)
    {
        com.qq.taf.jce.JceDisplayer _ds = new com.qq.taf.jce.JceDisplayer(_os, _level);
        _ds.displaySimple(eIPType, true);
        _ds.displaySimple(vIPList, true);
        _ds.displaySimple(eApnType, true);
        _ds.displaySimple(eNetType, false);
    }

}

